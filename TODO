TODO [branch development]:

    1 - Remove rapidjson and use boost
	    - Serialise using Boost (instead of manual JSON creation)

    2 - Implement Utilities: 
		- Cluster of Nodes: find for current node, what other nodes it has common edges with.
		- Fully connected: are two groups (vectors, arrays, lists) of Nodes (R,C || C,R) fully connected by edges?

	3 - Encoder:
		- Sparse / Dense encoding of a Conceptual Graph to a vector of normalized/scaled real values
		- Semantic Compression: use word-vector library and smnet++ for compressing a Conceptual Graph

[DEADLINE 29th MARCH 2016]

    4 - Implement Conversion of a Conceptual Graph to CGIF (string), or FOL.
		- Consider other FOL,HOL or Ontology Schemas (RDF?OWL?) to which we can translate Conceptual Graphs
		- Conversion may be semi-heuristic, e.g.,: infer edges and detect/predict entities

    5 - Consider optimising the library (Token/Node/Relation/Concept/Edge already are more or less)
        - Look into ConceptualGraph and see if anything can be made better/faster

	6 - Entity extraction, Agent/Person detection: either trainable, and/or using external tools and libraries
